#include<stdio.h>
#include<pthread.h>
#include<stdlib.h>
int f[20],p=0;
pthread_mutex_t mutex;
void * c()
{
	pthread_mutex_lock(&mutex);
	p=p+1;
	sleep(2);
	pthread_cancel(t3);
	sleep(1);
	pthread_cancel(t4);
	printf("I am the cat %d\n",p);
	f[p]=p;
	pthread_mutex_unlock(&mutex);
}

void * m()
{
	sleep(7);
	printf("Mouse ate from %d\n",p);
	p=p-1;
	
}

int main()
{
	pthread_t th1,th2;
	int x;
	int p=5
	printf("press 1 when only cat is eating\n");
	printf("press 2 when mouse is eating\n");
	printf("press 3 cat sees mouse eating and eats the mouse\n");
	printf("press 4 mouse starts eating after car eats\n");
	scanf("%d",&x);
	switch(x)
	{
		case 1:
			pthread_create(&t1,NULL,cat,NULL);
			pthread_join(t1,NULL);
			break;
		case 2:
			pthread_create(&t1,NULL,mouse,NULL);
			pthread_join(t1,NULL);
			break;
		case 3:
			pthread_create(&t1,NULL,cat,NULL);
			pthread_create(&t2,NULL,mouse,NULL);
			pthread_join(t1,NULL);
			pthread_join(t2,NULL);
			break;
		case 4:
			pthread_create(&t1,NULL,cat,NULL);
			sleep(8);
			pthread_create(&t2,NULL,mouse,NULL);
			pthread_join(t1,NULL);
			pthread_join(t2,NULL);
			break;
	
}
}
